@using Microsoft.AspNetCore.Identity
@using InterApro.Web.Data

@model InterApro.Web.Models.RequestListsViewModel
@inject SignInManager<InterAproWebUser> SignInManager
@inject UserManager<InterAproWebUser> UserManager
@{
    ViewData["Title"] = "InterApro - Requests";
}

<h1>Requests</h1>
@if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Buyer"))
{
    <p>
        <a asp-action="Create">Create New Request</a>
    </p>
}

<h3>@TempData["LastActionResult"]</h3>

<h2>New Requests</h2>
<table class="table">
    <thead>
        <tr>
            <th>
                Request Description
            </th>
            <th>
                Amount
            </th>
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Buyer"))
            {
                <th>
                    Manager
                </th>
            }
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Manager"))
            {
                <th>
                    Buyer
                </th>
            }
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Finance"))
            {
                <th>
                    Buyer
                </th>
                <th>
                    Manager
                </th>
            }
            <th>
                Date Created
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.NewRequests)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestAmount)
                </td>
                @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Buyer"))
                {
                    <td>
                        Review in Process
                    </td>
                }
                @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Manager"))
                {
                    <td>
                        @UserManager.FindByIdAsync(item.BuyerId).Result.FullName
                    </td>
                }
                @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Finance"))
                {
                    <td>
                        @UserManager.FindByIdAsync(item.BuyerId).Result.FullName
                    </td>
                    <td>
                        @UserManager.FindByIdAsync(item.ManagerId).Result.FullName
                    </td>
                }

                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.RequestId">Details</a> 
                </td>
            </tr>
        }
    </tbody>
</table>

<h2>Approved Requests</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                Request Description
            </th>
            <th>
                Amount
            </th>
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Buyer"))
            {
                <th>
                    Manager
                </th>
                <th>
                    Finance
                </th>
            }
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Manager"))
            {
                <th>
                    Buyer
                </th>
                <th>
                    Finance
                </th>
            }
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Finance"))
            {
                <th>
                    Buyer
                </th>
                <th>
                    Manager
                </th>
            }
            <th>
                Request Status
            </th>
            <th>
                Created
            </th>
            <th>
                Updated
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ApprovedRequests)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.RequestDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestAmount)
            </td>

            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Buyer"))
            {
                <td>
                    @UserManager.FindByIdAsync(item.ManagerId).Result.FullName
                </td>

                    <td>
                        @UserManager.FindByIdAsync(item.FinanceId).Result.FullName
                    </td>

            }
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Manager"))
            {
                <td>
                    @UserManager.FindByIdAsync(item.BuyerId).Result.FullName
                </td>


                 <td>
                       @UserManager.FindByIdAsync(item.FinanceId).Result.FullName
                 </td>

            }
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Finance"))
            {
                <td>
                    @UserManager.FindByIdAsync(item.BuyerId).Result.FullName
                </td>
                <td>
                    @UserManager.FindByIdAsync(item.ManagerId).Result.FullName
                </td>
            }

            <td>
                @Html.DisplayFor(modelItem => item.RequestStatus.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Created)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.RequestId">Details</a>
            </td>
        </tr>
        }
    </tbody>
</table>

<h2>Rejected Requests</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                Request Description
            </th>
            <th>
                Amount
            </th>
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Buyer"))
            {
                <th>
                    Manager
                </th>
                <th>
                    Finance
                </th>
            }
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Manager"))
            {
                <th>
                    Buyer
                </th>
                <th>
                    Finance
                </th>
            }
            @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Finance"))
            {
                <th>
                    Buyer
                </th>
                <th>
                    Manager
                </th>
            }
            <th>
                Request Status
            </th>
            <th>
                Created
            </th>
            <th>
                Updated
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.RejectedRequests)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RequestAmount)
                </td>

                @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Buyer"))
                {
                    <td>
                        @UserManager.FindByIdAsync(item.ManagerId).Result.FullName
                    </td>
                    
                        <td>
                            @UserManager.FindByIdAsync(item.FinanceId).Result.FullName
                        </td>


                }
                @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Manager"))
                {
                    <td>
                        @UserManager.FindByIdAsync(item.BuyerId).Result.FullName
                    </td>

                   
                        <td>
                            @UserManager.FindByIdAsync(item.FinanceId).Result.FullName
                        </td>

 
                }
                @if (await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), "Finance"))
                {
                    <td>
                        @UserManager.FindByIdAsync(item.BuyerId).Result.FullName
                    </td>
                    <td>
                        @UserManager.FindByIdAsync(item.ManagerId).Result.FullName
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.RequestStatus.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Updated)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.RequestId">Details</a> 
                </td>
            </tr>
        }
    </tbody>
</table>

